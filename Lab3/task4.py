# -*- coding: utf-8 -*-
"""task4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JmAOcyQU6-YeKoL08Es7J3eFuk62yjX4
"""

#task-04
input = open('/content/input4.txt', 'r')
output_file = open('/content/output4.txt','w')
N = int(input.readline().strip())
arr = input.readline().strip().split(" ")
array = []
for ele in arr:
  array.append(int(ele))

total_query = int(input.readline().strip())
query = []
for i in range(total_query):
  query.append(int(input.readline().strip()))


def partition(array, l, r):
    pivot = array[l]
    i = l
    j = r
    while i < j:
        while array[i] <= pivot and i < r:
            i += 1
        while array[j] > pivot and j > 0:
            j -= 1
        if i < j:
            array[i], array[j] = array[j], array[i]

    array[l], array[j] = array[j], array[l]
    return j


def kth_smallest_ele(array, l, r, k):
    if l == r:
        if l == k:
            return array[k - 1]
        else:
            return "not found"
    else:
        position = partition(array, l, r)
        if position == k:
            return array[k - 1]
        elif position < k:
            return kth_smallest_ele(array, position + 1, r, k)
        else:
            return kth_smallest_ele(array, l, position - 1, k)


for ele in query:
  print(kth_smallest_ele(array,0,N-1,ele), file = output_file)
output_file.close()