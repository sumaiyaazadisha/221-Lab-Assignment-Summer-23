# -*- coding: utf-8 -*-
"""task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y9nXmvYW9c63a-L1-efgk1klmyzNGCGe
"""

# task5
from collections import defaultdict
input = open('/content/input5.txt', 'r')
list1 = input.readline().strip().split()
vertex = int(list1[0])
edge = int(list1[1])
target = int(list1[2])

G = defaultdict(list)
for x in range(edge):
    arr = input.readline().strip().split(" ")
    array = []
    for ele in arr:
        array.append(int(ele))
    G[array[0]].append(array[1])
    G[array[1]].append(array[0])


def smallestPath(G, start=1, target=2):
    visited_color = ["white"] * (edge + 1)
    queue = [[start]]
    if start == target:
        print(f"Time: 0\nShortest Path: {start}")
        return

    while queue != []:
        u = queue.pop(0)
        ver = u[-1]

        if visited_color[ver] == "white":
            for v in G[ver]:
                new_path = list(u)
                new_path.append(v)
                queue.append(new_path)

                if v == target:
                    print(f"Time: {len(new_path) - 1}\nShortest Path: {new_path}")
                    return
            visited_color[ver] = "Black"

    print("NO PATH")
    return

smallestPath(G, 1, target)