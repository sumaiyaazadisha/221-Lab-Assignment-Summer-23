# -*- coding: utf-8 -*-
"""task4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y9nXmvYW9c63a-L1-efgk1klmyzNGCGe
"""

# task-04
input = open('/content/input4.txt', 'r')
list1 = input.readline().strip().split()
vertex = int(list1[0])
edge = int(list1[1])

G = {}
for i in range(1, vertex + 1):
    G[i] = []
for x in range(edge):
    arr = input.readline().strip().split(" ")
    array = []
    for ele in arr:
        array.append(int(ele))
    G[array[0]].append(array[1])


def check(V, visited, stack):
    if stack[V] == True:
        return True

    if visited[V] == True:
        return False

    visited[V] = True
    stack[V] = True
    for ver in G[V]:
        if check(ver, visited, stack) == True:
            return True

    stack[V] = False
    return False


def cycle_check(G, Start, Target):
    visited = [False] * (Start + 1)
    stack = [False] * (Start + 1)
    for key in G.keys():
        if check(key, visited, stack) == True:
            return True

    return False


if cycle_check(G, vertex, edge) == True:
    print("YES")
else:
    print("NO")